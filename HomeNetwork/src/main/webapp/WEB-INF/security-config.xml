<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<http pattern="/userpage/{userName}/public/download/{fileName:.+}"
		security="none" />

	<http auto-config="true" use-expressions="true">
		<access-denied-handler error-page="/errorloginpage" />

		<intercept-url pattern="/userpage/**" access="hasRole('ROLE_USER')" />


		<!-- Admin intercepts -->
		<intercept-url pattern="/adminpage/allusers" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern=" /adminpage/addUsers" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/adminpage/deleteUser/{userName}**"
			access="hasRole('ROLE_ADMIN')" />

		<intercept-url pattern="/adminpage**" access="hasRole('ROLE_ADMIN')" />


		<!-- User intercepts -->
		<!-- More specific one have to be higher up as Patterns are always evaluated 
			in the order they are defined http://docs.spring.io/spring-security/site/docs/3.0.x/reference/core-web-filters.html -->

		<form-login login-page='/loginpage' username-parameter="username"
			password-parameter="password" default-target-url="/startpage"
			always-use-default-target="true"
			authentication-failure-url="/loginpage?accessfailed" />
			
		<logout logout-success-url="/?logout" />
	</http>

<!--  always-use-default-target="true" -->

	<authentication-manager>
		<authentication-provider>
		
		<!-- adds password security -->
				<password-encoder ref="passwordEncoder"/>
				
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled 
										from users 
										where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?  " />
				
				
				
		</authentication-provider>
	</authentication-manager>

<!-- Password security Spring Security 3.1 PDF & http://www.beingjavaguys.com/2014/06/password-encoding-in-spring-security.html 19/07/2015
help to encode the password of users -->
	 <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	<beans:constructor-arg name="strength" value="11" />
  </beans:bean>


</beans:beans>